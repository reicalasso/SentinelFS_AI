# Logstash pipeline configuration for SentinelFS AI
input {
  beats {
    port => 5044
  }

  tcp {
    port => 5000
    codec => json_lines
  }

  udp {
    port => 5000
    codec => json_lines
  }

  # Direct file input for local development
  file {
    path => "/var/log/sentinelfs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^\{"
      negate => true
      what => "previous"
    }
  }
}

filter {
  # Parse JSON logs
  json {
    source => "message"
    target => "sentinelfs"
    remove_field => ["message"]
  }

  # Handle timestamp parsing
  date {
    match => ["[sentinelfs][timestamp]", "ISO8601", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss"]
    target => "@timestamp"
    remove_field => ["[sentinelfs][timestamp]"]
  }

  # Extract log level
  grok {
    match => {
      "[sentinelfs][message]" => "%{LOGLEVEL:log_level}"
    }
    patterns_dir => ["/usr/share/logstash/patterns"]
    remove_field => ["[sentinelfs][message]"]
  }

  # Add geoip information for IP addresses
  if [sentinelfs][client_ip] {
    geoip {
      source => "[sentinelfs][client_ip]"
      target => "[sentinelfs][geoip]"
    }
  }

  # Parse user agent strings
  if [sentinelfs][user_agent] {
    useragent {
      source => "[sentinelfs][user_agent]"
      target => "[sentinelfs][useragent]"
    }
  }

  # Extract metrics data
  if [sentinelfs][metrics] {
    mutate {
      add_field => {
        "response_time_ms" => "%{[sentinelfs][metrics][response_time]}"
        "memory_usage_mb" => "%{[sentinelfs][metrics][memory_usage]}"
        "cpu_usage_percent" => "%{[sentinelfs][metrics][cpu_usage]}"
      }
    }
  }

  # Add service metadata
  mutate {
    add_field => {
      "service" => "sentinelfs-ai"
      "environment" => "%{[sentinelfs][environment]}"
      "version" => "%{[sentinelfs][version]}"
    }
  }

  # Remove sensitive information
  mutate {
    remove_field => ["[sentinelfs][api_key]", "[sentinelfs][password]"]
  }
}

output {
  # Main Elasticsearch output
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "sentinelfs-%{+YYYY.MM.dd}"
    document_type => "_doc"
    template_name => "sentinelfs"
    template => "/usr/share/logstash/config/sentinelfs-template.json"
    template_overwrite => true
  }

  # Debug output for development
  if "_debug" in [tags] {
    stdout {
      codec => rubydebug
    }
  }
}